# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Npm@1
  displayName: 'install packages'
  inputs:
    command: 'install'
    workingDir: 'src/semanticRelease'
- task: Npm@1
  displayName: 'build'
  enabled: false
  inputs:
    command: 'custom'
    workingDir: 'src/semanticRelease'
    customCommand: 'run build'
- task: PowerShell@2
  displayName: 'run tsc'
  enabled: true
  inputs:
    targetType: 'inline'
    script: 'tsc'
    workingDirectory: 'src/semanticRelease'
- task: PowerShell@2
  displayName: 'install tfx-cli'
  inputs:
    targetType: 'inline'
    script: 'npm install --prefix $(Build.SourcesDirectory)/bin/lib -g tfx-cli'
    pwsh: true
    workingDirectory: ''
- task: PowerShell@2
  displayName: 'package the package'
  inputs:
    targetType: 'inline'
    script: '$(Build.SourcesDirectory)/bin/lib/tfx extension create --manifest-globs vss-extension.json --rev-version --output-path $(Build.ArtifactStagingDirectory) --publisher $(publisherId) --extension-id $(extensionId)'
    pwsh: true
    workingDirectory: 'src/'
- task: PowerShell@2
  displayName: 'publish the package'
  inputs:
    targetType: 'inline'
    script: '$(Build.SourcesDirectory)/bin/lib/tfx extension publish -p $(PATToPublish) --publisher $(publisherId) --extension-id $(extensionId) --share-with $(shareWith)'
    pwsh: true
    workingDirectory: '$(Build.ArtifactStagingDirectory)'